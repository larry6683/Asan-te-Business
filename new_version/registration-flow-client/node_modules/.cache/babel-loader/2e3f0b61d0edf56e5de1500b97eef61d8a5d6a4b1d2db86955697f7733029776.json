{"ast":null,"code":"export class CookieService {\n  constructor() {}\n  static setCookie(name, value, days) {\n    let expires = \"\";\n    if (days) {\n      const date = this.calculateExpirationTime(days);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    if (value) value = JSON.stringify(value);\n    document.cookie = name + \"=\" + (value || \"{}\") + expires + \"; path=/\";\n  }\n  static getCookie(name) {\n    let nameEQ = name + \"=\";\n    let ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n  static eraseCookie(name) {\n    document.cookie = name + '=; Max-Age=-99999999; path=/';\n  }\n  static calculateExpirationTime(days) {\n    if (!days) days = 1;\n    const date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    return date.toUtcString();\n  }\n}","map":{"version":3,"names":["CookieService","constructor","setCookie","name","value","days","expires","date","calculateExpirationTime","toUTCString","JSON","stringify","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","eraseCookie","Date","setTime","getTime","toUtcString"],"sources":["C:/Users/battu/Downloads/new_version/registration-flow-client/src/cookies/cookieService.js"],"sourcesContent":["export class CookieService {\r\n    constructor() {}\r\n\r\n    static setCookie(name, value, days) {\r\n        let expires = \"\";\r\n        if (days) {\r\n            const date = this.calculateExpirationTime(days)\r\n            expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        if (value) value = JSON.stringify(value);\r\n        document.cookie = name + \"=\" + (value || \"{}\") + expires + \"; path=/\";\r\n    }\r\n\r\n    static getCookie(name) {\r\n        let nameEQ = name + \"=\";\r\n        let ca = document.cookie.split(';');\r\n        for (let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === ' ') c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static eraseCookie(name) {\r\n        document.cookie = name + '=; Max-Age=-99999999; path=/';\r\n    }\r\n\r\n    static calculateExpirationTime(days) {\r\n        if (!days)\r\n            days = 1;\r\n\r\n        const date = new Date();\r\n        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n        return date.toUtcString();\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MAAMA,aAAa,CAAC;EACvBC,WAAWA,CAAA,EAAG,CAAC;EAEf,OAAOC,SAASA,CAACC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAE;IAChC,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAID,IAAI,EAAE;MACN,MAAME,IAAI,GAAG,IAAI,CAACC,uBAAuB,CAACH,IAAI,CAAC;MAC/CC,OAAO,GAAG,YAAY,GAAGC,IAAI,CAACE,WAAW,CAAC,CAAC;IAC/C;IACA,IAAIL,KAAK,EAAEA,KAAK,GAAGM,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC;IACxCQ,QAAQ,CAACC,MAAM,GAAGV,IAAI,GAAG,GAAG,IAAIC,KAAK,IAAI,IAAI,CAAC,GAAGE,OAAO,GAAG,UAAU;EACzE;EAEA,OAAOQ,SAASA,CAACX,IAAI,EAAE;IACnB,IAAIY,MAAM,GAAGZ,IAAI,GAAG,GAAG;IACvB,IAAIa,EAAE,GAAGJ,QAAQ,CAACC,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC;IACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,EAAE,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAChC,IAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAC,CAAC;MACb,OAAOE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAED,CAAC,GAAGA,CAAC,CAACE,SAAS,CAAC,CAAC,EAAEF,CAAC,CAACD,MAAM,CAAC;MACxD,IAAIC,CAAC,CAACG,OAAO,CAACR,MAAM,CAAC,KAAK,CAAC,EAAE,OAAOK,CAAC,CAACE,SAAS,CAACP,MAAM,CAACI,MAAM,EAAEC,CAAC,CAACD,MAAM,CAAC;IAC5E;IACA,OAAO,IAAI;EACf;EAEA,OAAOK,WAAWA,CAACrB,IAAI,EAAE;IACrBS,QAAQ,CAACC,MAAM,GAAGV,IAAI,GAAG,8BAA8B;EAC3D;EAEA,OAAOK,uBAAuBA,CAACH,IAAI,EAAE;IACjC,IAAI,CAACA,IAAI,EACLA,IAAI,GAAG,CAAC;IAEZ,MAAME,IAAI,GAAG,IAAIkB,IAAI,CAAC,CAAC;IACvBlB,IAAI,CAACmB,OAAO,CAACnB,IAAI,CAACoB,OAAO,CAAC,CAAC,GAAItB,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAK,CAAC;IAC3D,OAAOE,IAAI,CAACqB,WAAW,CAAC,CAAC;EAC7B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}