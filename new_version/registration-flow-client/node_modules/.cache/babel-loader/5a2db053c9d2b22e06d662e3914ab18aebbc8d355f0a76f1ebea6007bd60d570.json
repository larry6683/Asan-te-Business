{"ast":null,"code":"import { AsanteUsersUserPool } from \"./asanteUsersUserPool\";\nimport { UserApiService } from \"../api/userApiService\";\n\n// Initialize the user API service\nconst userApiService = new UserApiService();\n\n// callbacks are so extra but i was running into some weird async shenanigains\nexport const signupUser = (userType, email, password, mailingListSignup, successCallback, errorCallback) => {\n  const pool = AsanteUsersUserPool;\n  let success = false;\n  try {\n    pool.signUp(email, password, [{\n      Name: \"email\",\n      Value: email\n    }, {\n      Name: \"custom:mailing_list_signup\",\n      Value: mailingListSignup\n    }, {\n      Name: \"custom:user_type\",\n      Value: userType\n    }], null, async (err, data) => {\n      if (err) {\n        if (errorCallback) errorCallback(err);\n      } else {\n        // ✅ NEW: After Cognito sign-up succeeds, create user in database\n        console.log('✅ Cognito sign-up successful, creating user in database...');\n        try {\n          await userApiService.createUser(email, response => {\n            console.log('✅ User created in database:', response);\n            if (successCallback) successCallback();\n          }, dbError => {\n            console.error('⚠️ User created in Cognito but failed to save to database:', dbError);\n            // Still call success since Cognito account was created\n            // The user will be created in DB on first sign-in as fallback\n            if (successCallback) successCallback();\n          });\n        } catch (dbError) {\n          console.error('⚠️ Database error during user creation:', dbError);\n          // Still call success since Cognito account was created\n          if (successCallback) successCallback();\n        }\n      }\n    });\n  } catch (e) {\n    if (errorCallback) errorCallback(\"signup error\", e);\n  }\n  return success;\n};","map":{"version":3,"names":["AsanteUsersUserPool","UserApiService","userApiService","signupUser","userType","email","password","mailingListSignup","successCallback","errorCallback","pool","success","signUp","Name","Value","err","data","console","log","createUser","response","dbError","error","e"],"sources":["C:/Users/battu/Downloads/new_version/registration-flow-client/src/user-auth/signupUser.js"],"sourcesContent":["import { AsanteUsersUserPool } from \"./asanteUsersUserPool\";\r\nimport { UserApiService } from \"../api/userApiService\";\r\n\r\n// Initialize the user API service\r\nconst userApiService = new UserApiService();\r\n\r\n// callbacks are so extra but i was running into some weird async shenanigains\r\nexport const signupUser = (\r\n  userType,\r\n  email,\r\n  password,\r\n  mailingListSignup,\r\n  successCallback,\r\n  errorCallback,\r\n) => {\r\n  const pool = AsanteUsersUserPool;\r\n  let success = false;\r\n  \r\n  try {\r\n    pool.signUp(\r\n      email,\r\n      password,\r\n      [\r\n        {\r\n          Name: \"email\",\r\n          Value: email,\r\n        },\r\n        {\r\n          Name: \"custom:mailing_list_signup\",\r\n          Value: mailingListSignup,\r\n        },\r\n        {\r\n          Name: \"custom:user_type\",\r\n          Value: userType,\r\n        },\r\n      ],\r\n      null,\r\n      async (err, data) => {\r\n        if (err) {\r\n          if (errorCallback) errorCallback(err);\r\n        } else {\r\n          // ✅ NEW: After Cognito sign-up succeeds, create user in database\r\n          console.log('✅ Cognito sign-up successful, creating user in database...');\r\n          \r\n          try {\r\n            await userApiService.createUser(\r\n              email,\r\n              (response) => {\r\n                console.log('✅ User created in database:', response);\r\n                if (successCallback) successCallback();\r\n              },\r\n              (dbError) => {\r\n                console.error('⚠️ User created in Cognito but failed to save to database:', dbError);\r\n                // Still call success since Cognito account was created\r\n                // The user will be created in DB on first sign-in as fallback\r\n                if (successCallback) successCallback();\r\n              }\r\n            );\r\n          } catch (dbError) {\r\n            console.error('⚠️ Database error during user creation:', dbError);\r\n            // Still call success since Cognito account was created\r\n            if (successCallback) successCallback();\r\n          }\r\n        }\r\n      },\r\n    );\r\n  } catch (e) {\r\n    if (errorCallback) errorCallback(\"signup error\", e);\r\n  }\r\n  \r\n  return success;\r\n};"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;AACA,MAAMC,cAAc,GAAG,IAAID,cAAc,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAME,UAAU,GAAGA,CACxBC,QAAQ,EACRC,KAAK,EACLC,QAAQ,EACRC,iBAAiB,EACjBC,eAAe,EACfC,aAAa,KACV;EACH,MAAMC,IAAI,GAAGV,mBAAmB;EAChC,IAAIW,OAAO,GAAG,KAAK;EAEnB,IAAI;IACFD,IAAI,CAACE,MAAM,CACTP,KAAK,EACLC,QAAQ,EACR,CACE;MACEO,IAAI,EAAE,OAAO;MACbC,KAAK,EAAET;IACT,CAAC,EACD;MACEQ,IAAI,EAAE,4BAA4B;MAClCC,KAAK,EAAEP;IACT,CAAC,EACD;MACEM,IAAI,EAAE,kBAAkB;MACxBC,KAAK,EAAEV;IACT,CAAC,CACF,EACD,IAAI,EACJ,OAAOW,GAAG,EAAEC,IAAI,KAAK;MACnB,IAAID,GAAG,EAAE;QACP,IAAIN,aAAa,EAAEA,aAAa,CAACM,GAAG,CAAC;MACvC,CAAC,MAAM;QACL;QACAE,OAAO,CAACC,GAAG,CAAC,4DAA4D,CAAC;QAEzE,IAAI;UACF,MAAMhB,cAAc,CAACiB,UAAU,CAC7Bd,KAAK,EACJe,QAAQ,IAAK;YACZH,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEE,QAAQ,CAAC;YACpD,IAAIZ,eAAe,EAAEA,eAAe,CAAC,CAAC;UACxC,CAAC,EACAa,OAAO,IAAK;YACXJ,OAAO,CAACK,KAAK,CAAC,4DAA4D,EAAED,OAAO,CAAC;YACpF;YACA;YACA,IAAIb,eAAe,EAAEA,eAAe,CAAC,CAAC;UACxC,CACF,CAAC;QACH,CAAC,CAAC,OAAOa,OAAO,EAAE;UAChBJ,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAED,OAAO,CAAC;UACjE;UACA,IAAIb,eAAe,EAAEA,eAAe,CAAC,CAAC;QACxC;MACF;IACF,CACF,CAAC;EACH,CAAC,CAAC,OAAOe,CAAC,EAAE;IACV,IAAId,aAAa,EAAEA,aAAa,CAAC,cAAc,EAAEc,CAAC,CAAC;EACrD;EAEA,OAAOZ,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}