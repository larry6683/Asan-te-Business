{"ast":null,"code":"import { getAccessJwtFromStorage } from \"../user-auth/authenticateUser\";\nimport { AppCookieService } from \"./appCookieService\";\nexport class CookieFactory {\n  static createAppCookieFromDataOrStorage(userData = null, entityData = null) {\n    const accessJwt = getAccessJwtFromStorage();\n    let user = {};\n    if (!userData) {\n      user = sessionStorage.getItem(\"asante:user\");\n    } else {\n      user = {\n        id: userData.id,\n        email: userData.email,\n        userType: userData.userType\n      };\n    }\n    // must update for beneficiaries when implemented\n    let entityType = \"\";\n    let entityId = \"\";\n    if (!entityData) {\n      // assume business for now.\n      entityType = \"business\"; // not sure if this is in storage or not.\n      entityId = sessionStorage.getItem(\"asante:businessId\");\n    } else {\n      entityId = entityData.entityId;\n    }\n    const appCookie = AppCookieService.createAppCookie(entityType, entityId, user.id, user.email, accessJwt);\n    return appCookie;\n  }\n}","map":{"version":3,"names":["getAccessJwtFromStorage","AppCookieService","CookieFactory","createAppCookieFromDataOrStorage","userData","entityData","accessJwt","user","sessionStorage","getItem","id","email","userType","entityType","entityId","appCookie","createAppCookie"],"sources":["C:/Users/battu/Downloads/new_version/registration-flow-client/src/cookies/cookieFactory.js"],"sourcesContent":["import { getAccessJwtFromStorage } from \"../user-auth/authenticateUser\"\r\nimport { AppCookieService } from \"./appCookieService\";\r\n\r\nexport class CookieFactory {\r\n    static createAppCookieFromDataOrStorage(userData=null, entityData=null) {\r\n        const accessJwt = getAccessJwtFromStorage();\r\n        let user = {}\r\n        if (!userData) {\r\n            user = sessionStorage.getItem(\"asante:user\");\r\n        } else {\r\n            user = {\r\n                id: userData.id,\r\n                email: userData.email,\r\n                userType: userData.userType\r\n            }\r\n        }\r\n        // must update for beneficiaries when implemented\r\n        let entityType = \"\";\r\n        let entityId = \"\";\r\n\r\n        if (!entityData) {\r\n            // assume business for now.\r\n            entityType = \"business\"; // not sure if this is in storage or not.\r\n            entityId = sessionStorage.getItem(\"asante:businessId\");\r\n        } else {\r\n            entityId = entityData.entityId\r\n        }\r\n        const appCookie = AppCookieService.createAppCookie(\r\n            entityType, entityId, user.id, user.email, accessJwt\r\n        )\r\n\r\n        return appCookie;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,+BAA+B;AACvE,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAO,MAAMC,aAAa,CAAC;EACvB,OAAOC,gCAAgCA,CAACC,QAAQ,GAAC,IAAI,EAAEC,UAAU,GAAC,IAAI,EAAE;IACpE,MAAMC,SAAS,GAAGN,uBAAuB,CAAC,CAAC;IAC3C,IAAIO,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,CAACH,QAAQ,EAAE;MACXG,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;IAChD,CAAC,MAAM;MACHF,IAAI,GAAG;QACHG,EAAE,EAAEN,QAAQ,CAACM,EAAE;QACfC,KAAK,EAAEP,QAAQ,CAACO,KAAK;QACrBC,QAAQ,EAAER,QAAQ,CAACQ;MACvB,CAAC;IACL;IACA;IACA,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,QAAQ,GAAG,EAAE;IAEjB,IAAI,CAACT,UAAU,EAAE;MACb;MACAQ,UAAU,GAAG,UAAU,CAAC,CAAC;MACzBC,QAAQ,GAAGN,cAAc,CAACC,OAAO,CAAC,mBAAmB,CAAC;IAC1D,CAAC,MAAM;MACHK,QAAQ,GAAGT,UAAU,CAACS,QAAQ;IAClC;IACA,MAAMC,SAAS,GAAGd,gBAAgB,CAACe,eAAe,CAC9CH,UAAU,EAAEC,QAAQ,EAAEP,IAAI,CAACG,EAAE,EAAEH,IAAI,CAACI,KAAK,EAAEL,SAC/C,CAAC;IAED,OAAOS,SAAS;EACpB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}