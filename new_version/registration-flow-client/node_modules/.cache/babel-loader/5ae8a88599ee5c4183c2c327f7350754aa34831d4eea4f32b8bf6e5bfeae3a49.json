{"ast":null,"code":"import { AsanteUsersUserPool } from \"./asanteUsersUserPool\";\nimport { logoutUser } from \"../authentication/logoutUser\";\nimport { clearStore } from \"../redux/store\";\nimport { getUserDataFromStorage, setUserDataInStorage } from \"../authentication/userData\";\nexport const logoutCurrentUser = (successCallback, errorCallback) => {\n  const userData = getUserDataFromStorage();\n  if (userData && userData.email) {\n    const email = userData.email;\n    logoutUser(AsanteUsersUserPool, email, message => {\n      // console.log(\"logoutSuccess\");\n      clearStore(true);\n      successCallback(message);\n    }, error => {\n      // console.error(\"logoutError\", error);\n      // automatically clear session storage just in case..\n      setUserDataInStorage(null);\n      clearStore(true);\n      errorCallback(error);\n    });\n  } else {\n    errorCallback();\n  }\n};","map":{"version":3,"names":["AsanteUsersUserPool","logoutUser","clearStore","getUserDataFromStorage","setUserDataInStorage","logoutCurrentUser","successCallback","errorCallback","userData","email","message","error"],"sources":["C:/Users/battu/Downloads/new_version/registration-flow-client/src/user-auth/logoutUser.js"],"sourcesContent":["import { AsanteUsersUserPool } from \"./asanteUsersUserPool\";\r\nimport { logoutUser } from \"../authentication/logoutUser\";\r\nimport { clearStore } from \"../redux/store\";\r\nimport {\r\n  getUserDataFromStorage,\r\n  setUserDataInStorage,\r\n} from \"../authentication/userData\";\r\n\r\nexport const logoutCurrentUser = (successCallback, errorCallback) => {\r\n  const userData = getUserDataFromStorage();\r\n  if (userData && userData.email) {\r\n    const email = userData.email;\r\n    logoutUser(\r\n      AsanteUsersUserPool,\r\n      email,\r\n      (message) => {\r\n        // console.log(\"logoutSuccess\");\r\n        clearStore(true);\r\n        successCallback(message);\r\n      },\r\n      (error) => {\r\n        // console.error(\"logoutError\", error);\r\n        // automatically clear session storage just in case..\r\n        setUserDataInStorage(null);\r\n        clearStore(true);\r\n        errorCallback(error);\r\n      },\r\n    );\r\n  } else {\r\n    errorCallback();\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SACEC,sBAAsB,EACtBC,oBAAoB,QACf,4BAA4B;AAEnC,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,eAAe,EAAEC,aAAa,KAAK;EACnE,MAAMC,QAAQ,GAAGL,sBAAsB,CAAC,CAAC;EACzC,IAAIK,QAAQ,IAAIA,QAAQ,CAACC,KAAK,EAAE;IAC9B,MAAMA,KAAK,GAAGD,QAAQ,CAACC,KAAK;IAC5BR,UAAU,CACRD,mBAAmB,EACnBS,KAAK,EACJC,OAAO,IAAK;MACX;MACAR,UAAU,CAAC,IAAI,CAAC;MAChBI,eAAe,CAACI,OAAO,CAAC;IAC1B,CAAC,EACAC,KAAK,IAAK;MACT;MACA;MACAP,oBAAoB,CAAC,IAAI,CAAC;MAC1BF,UAAU,CAAC,IAAI,CAAC;MAChBK,aAAa,CAACI,KAAK,CAAC;IACtB,CACF,CAAC;EACH,CAAC,MAAM;IACLJ,aAAa,CAAC,CAAC;EACjB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}