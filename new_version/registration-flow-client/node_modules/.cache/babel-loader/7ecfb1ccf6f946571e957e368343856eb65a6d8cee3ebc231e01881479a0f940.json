{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\battu\\\\Downloads\\\\new_version\\\\registration-flow-client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Box from \"@mui/material/Box\";\nimport Typography from '@mui/material/Typography';\nimport styles from \"./Login.module.css\";\nimport { TextField, Link, InputAdornment, IconButton } from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { getUserAuthenticationTokenAndSaveInStorage } from \"../user-auth/authenticateUser\";\nimport { setEmailID } from \"../redux/emailSlice\";\nimport { setUser } from \"../redux/userSlice\";\nimport { clearStore } from \"../redux/store\";\nimport { setSelectedOption } from \"../redux/selectedOptionSlice\";\nimport { USER_TYPE } from \"../types/userType\";\nimport { UserApiService } from \"../api/userApiService\";\nimport BusinessImage from \"../assets/business.png\";\nimport ConsumerImage from \"../assets/consumer.png\";\nimport NonprofitImage from \"../assets/nonprofit.png\";\nimport { CookieFactory } from \"../cookies/cookieFactory\";\nimport { redirectUrls } from \"../web-data/redirectUrls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  clearStore(true);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [invalidCredentials, setInvalidCredentials] = useState(false);\n  const [emailEmpty, setEmailEmpty] = useState(false);\n  const [passwordEmpty, setPasswordEmpty] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n  const handleMouseDownPassword = event => event.preventDefault();\n  const validateForm = () => {\n    let valid = true;\n    if (email.length === 0) {\n      valid = false;\n      setEmailEmpty(true);\n    }\n    if (password.length === 0) {\n      valid = false;\n      setPasswordEmpty(true);\n    }\n    return valid;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!validateForm()) return;\n    let registrationOption = null;\n    getUserAuthenticationTokenAndSaveInStorage(email, password,\n    // success callback\n    // the auth token has already been saved\n    // big future TODO is to separate out all of this tangled code. :(\n    result => {\n      registrationOption = getRegistrationOptionFromUserData(result);\n      getUserIdAndContinue(registrationOption);\n    }, error => {\n      if (error.name === \"UserNotConfirmedException\") {\n        dispatch(setEmailID(email));\n        navigate(`/register/verification`);\n      } else {\n        setInvalidCredentials(true);\n      }\n    });\n  };\n  const getRegistrationOptionFromUserData = userData => {\n    let option = \"\";\n    let image = \"\";\n    if (userData.userType === USER_TYPE.BUSINESS_ADMIN) {\n      option = \"Business\";\n      image = BusinessImage;\n    } else if (userData.userType === USER_TYPE.BENEFICIARY_ADMIN) {\n      option = \"Non-Profit\";\n      image = NonprofitImage;\n    } else if (userData.userType === USER_TYPE.CONSUMER) {\n      option = \"Consumer\";\n      image = ConsumerImage;\n    }\n    return {\n      registeringAs: option,\n      registeringAsImage: image\n    };\n  };\n  const getUserIdAndContinue = registrationOption => {\n    if (registrationOption) {\n      dispatch(setSelectedOption({\n        selected: registrationOption.registeringAs,\n        image: registrationOption.registeringAsImage\n      }));\n      dispatch(setEmailID(email));\n      const userApiService = new UserApiService();\n      userApiService.getUserByEmail(email).then(response => {\n        // 🔍 ADD ALL THIS LOGGING:\n        console.log('🔍 Full response:', response);\n        console.log('🔍 response.data:', response.data);\n        console.log('🔍 response.data.relationships:', response.data.relationships);\n        console.log('🔍 Session businessId:', sessionStorage.getItem(\"asante:businessId\"));\n        console.log('🔍 Session beneficiaryId:', sessionStorage.getItem(\"asante:beneficiaryId\"));\n        const user = {\n          id: response.data.id,\n          email: response.data.attributes.email,\n          userType: response.data.attributes.userType\n        };\n        if (response.data.relationships) {\n          const relationships = response.data.relationships;\n\n          // this indicates a user has already registered a business\n          // or belongs to one.\n          let entityType = \"\";\n          let entityId = \"\";\n          if (relationships.businesses) {\n            const entity = relationships.businesses.data[0];\n            entityType = \"business\";\n            entityId = entity.id;\n          } else if (relationships.beneficiaries) {\n            const entity = relationships.beneficiaries.data[0];\n            entityType = \"business\";\n            entityId = entity.id;\n          }\n          CookieFactory.createAppCookieFromDataOrStorage(user, {\n            entityType: entityType,\n            entityId: entityId\n          });\n          // navigate to profile.\n          window.location.href = `${redirectUrls.portal}/profile`;\n        } else {\n          dispatch(setUser(user));\n          sessionStorage.setItem(\"asante:user\", JSON.stringify(user));\n          navigate(`/register/causes`);\n        }\n      }).catch(error => {\n        try {\n          const errorJson = JSON.parse(error.message);\n          if (errorJson.errors) {\n            errorJson.errors.forEach(value => {\n              if (value.errorCode === 250) {\n                createUserAndContinue(email);\n              }\n            });\n          }\n        } catch (error2) {\n          setInvalidCredentials(true);\n        }\n      });\n    } else {\n      setInvalidCredentials(true);\n    }\n  };\n  const createUserAndContinue = email => {\n    const userApiService = new UserApiService();\n    userApiService.createUser(email, response => {\n      const user = {\n        id: response.data.id,\n        email: response.data.attributes.email,\n        userType: response.data.attributes.userType\n      };\n      dispatch(setUser(user));\n      sessionStorage.setItem(\"asante:user\", JSON.stringify(user));\n      navigate(`/register/causes`);\n    }, error => {\n      clearStore(true);\n      setInvalidCredentials(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.imageContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textSecondary,\n        children: [\"Log in to \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.highlight,\n          children: \"ASANTe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), \" portal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: styles.inputLabel,\n            children: [\"Email\", invalidCredentials && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: \" Invalid Credentials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 38\n            }, this), emailEmpty && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: \" Email required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            fullWidth: true,\n            id: \"email\",\n            placeholder: \"Enter email address here\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            value: email,\n            onChange: e => {\n              setInvalidCredentials(false);\n              setEmailEmpty(false);\n              setEmail(e.target.value);\n            },\n            className: styles.inputField,\n            InputProps: {\n              classes: {\n                root: styles.inputRoot,\n                input: styles.input\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: styles.inputLabel,\n            children: [\"Password\", passwordEmpty && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: \" Password required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            fullWidth: true,\n            name: \"password\",\n            placeholder: \"Enter a strong password here\",\n            type: showPassword ? \"text\" : \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            value: password,\n            onChange: e => {\n              setInvalidCredentials(false);\n              setPasswordEmpty(false);\n              setPassword(e.target.value);\n            },\n            className: styles.inputField,\n            InputProps: {\n              classes: {\n                root: styles.inputRoot,\n                input: styles.input\n              },\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  edge: \"end\",\n                  tabIndex: -1,\n                  children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 39\n                  }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 59\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.loginButton,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.signupText,\n          children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            href: `/register`,\n            className: styles.signupLink,\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          className: styles.forgotPasswordLink,\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"6AMgLQx6mXvNI4Z0ougHXy8Xs4g=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useDispatch","Box","Typography","styles","TextField","Link","InputAdornment","IconButton","Visibility","VisibilityOff","getUserAuthenticationTokenAndSaveInStorage","setEmailID","setUser","clearStore","setSelectedOption","USER_TYPE","UserApiService","BusinessImage","ConsumerImage","NonprofitImage","CookieFactory","redirectUrls","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","showPassword","setShowPassword","invalidCredentials","setInvalidCredentials","emailEmpty","setEmailEmpty","passwordEmpty","setPasswordEmpty","dispatch","navigate","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","validateForm","valid","length","handleSubmit","registrationOption","result","getRegistrationOptionFromUserData","getUserIdAndContinue","error","name","userData","option","image","userType","BUSINESS_ADMIN","BENEFICIARY_ADMIN","CONSUMER","registeringAs","registeringAsImage","selected","userApiService","getUserByEmail","then","response","console","log","data","relationships","sessionStorage","getItem","user","id","attributes","entityType","entityId","businesses","entity","beneficiaries","createAppCookieFromDataOrStorage","window","location","href","portal","setItem","JSON","stringify","catch","errorJson","parse","message","errors","forEach","value","errorCode","createUserAndContinue","error2","createUser","className","container","children","box","imageContainer","fileName","_jsxFileName","lineNumber","columnNumber","textSecondary","highlight","component","onSubmit","formContainer","inputWrapper","htmlFor","inputLabel","errorText","variant","fullWidth","placeholder","autoComplete","autoFocus","onChange","e","target","inputField","InputProps","classes","root","inputRoot","input","type","endAdornment","position","onClick","onMouseDown","edge","tabIndex","loginButton","signupText","signupLink","forgotPasswordLink","_c","$RefreshReg$"],"sources":["C:/Users/battu/Downloads/new_version/registration-flow-client/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from '@mui/material/Typography';\r\nimport styles from \"./Login.module.css\";\r\nimport { TextField, Link, InputAdornment, IconButton } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { getUserAuthenticationTokenAndSaveInStorage } from \"../user-auth/authenticateUser\";\r\nimport { setEmailID } from \"../redux/emailSlice\";\r\nimport { setUser } from \"../redux/userSlice\";\r\nimport { clearStore } from \"../redux/store\";\r\nimport { setSelectedOption } from \"../redux/selectedOptionSlice\";\r\nimport { USER_TYPE } from \"../types/userType\";\r\nimport { UserApiService } from \"../api/userApiService\";\r\n\r\nimport BusinessImage from \"../assets/business.png\";\r\nimport ConsumerImage from \"../assets/consumer.png\";\r\nimport NonprofitImage from \"../assets/nonprofit.png\";\r\nimport { CookieFactory } from \"../cookies/cookieFactory\";\r\nimport { redirectUrls } from \"../web-data/redirectUrls\"\r\n\r\nconst Login = () => {\r\n  clearStore(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [invalidCredentials, setInvalidCredentials] = useState(false);\r\n  const [emailEmpty, setEmailEmpty] = useState(false);\r\n  const [passwordEmpty, setPasswordEmpty] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const handleMouseDownPassword = (event) => event.preventDefault();\r\n\r\n  const validateForm = () => {\r\n    let valid = true;\r\n    if (email.length === 0) {\r\n      valid = false;\r\n      setEmailEmpty(true);\r\n    }\r\n    if (password.length === 0) {\r\n      valid = false;\r\n      setPasswordEmpty(true);\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!validateForm()) return;\r\n    let registrationOption = null;\r\n    getUserAuthenticationTokenAndSaveInStorage(\r\n      email,\r\n      password,\r\n      // success callback\r\n      // the auth token has already been saved\r\n      // big future TODO is to separate out all of this tangled code. :(\r\n      (result) => {\r\n        registrationOption = getRegistrationOptionFromUserData(result);\r\n        getUserIdAndContinue(registrationOption);\r\n      },\r\n      (error) => {\r\n        if (error.name === \"UserNotConfirmedException\") {\r\n          dispatch(setEmailID(email));\r\n          navigate(`/register/verification`);\r\n        } else {\r\n          setInvalidCredentials(true);\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  const getRegistrationOptionFromUserData = (userData) => {\r\n    let option = \"\";\r\n    let image = \"\";\r\n    if (userData.userType === USER_TYPE.BUSINESS_ADMIN) {\r\n      option = \"Business\";\r\n      image = BusinessImage;\r\n    } else if (userData.userType === USER_TYPE.BENEFICIARY_ADMIN) {\r\n      option = \"Non-Profit\";\r\n      image = NonprofitImage;\r\n    } else if (userData.userType === USER_TYPE.CONSUMER) {\r\n      option = \"Consumer\";\r\n      image = ConsumerImage;\r\n    }\r\n    return { registeringAs: option, registeringAsImage: image };\r\n  };\r\n\r\n  const getUserIdAndContinue = (registrationOption) => {\r\n    if (registrationOption) {\r\n      dispatch(setSelectedOption({\r\n        selected: registrationOption.registeringAs,\r\n        image: registrationOption.registeringAsImage,\r\n      }));\r\n      dispatch(setEmailID(email));\r\n      const userApiService = new UserApiService();\r\n      userApiService.getUserByEmail(email)\r\n        .then((response) => {\r\n\r\n            // 🔍 ADD ALL THIS LOGGING:\r\n          console.log('🔍 Full response:', response);\r\n          console.log('🔍 response.data:', response.data);\r\n          console.log('🔍 response.data.relationships:', response.data.relationships);\r\n          console.log('🔍 Session businessId:', sessionStorage.getItem(\"asante:businessId\"));\r\n          console.log('🔍 Session beneficiaryId:', sessionStorage.getItem(\"asante:beneficiaryId\"));\r\n          const user = {\r\n            id: response.data.id,\r\n            email: response.data.attributes.email,\r\n            userType: response.data.attributes.userType,\r\n          };\r\n          if (response.data.relationships) {\r\n            const relationships = response.data.relationships;\r\n\r\n            // this indicates a user has already registered a business\r\n            // or belongs to one.\r\n            let entityType = \"\"\r\n            let entityId = \"\"\r\n            if (relationships.businesses) {\r\n              const entity = relationships.businesses.data[0];\r\n              entityType = \"business\"\r\n              entityId = entity.id;\r\n            } else if (relationships.beneficiaries) {\r\n              const entity = relationships.beneficiaries.data[0];\r\n              entityType = \"business\"\r\n              entityId = entity.id;\r\n            }\r\n            CookieFactory.createAppCookieFromDataOrStorage(\r\n              user, { entityType: entityType, entityId: entityId }\r\n            )\r\n            // navigate to profile.\r\n            window.location.href = `${redirectUrls.portal}/profile`;\r\n          } else {\r\n            dispatch(setUser(user));\r\n          \r\n            sessionStorage.setItem(\"asante:user\", JSON.stringify(user));\r\n            navigate(`/register/causes`);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          try {\r\n            const errorJson = JSON.parse(error.message);\r\n            if (errorJson.errors) {\r\n              errorJson.errors.forEach((value) => {\r\n                if (value.errorCode === 250) {\r\n                  createUserAndContinue(email);\r\n                }\r\n              });\r\n            }\r\n          } catch (error2) {\r\n            setInvalidCredentials(true);\r\n          } \r\n        });\r\n    } else {\r\n      setInvalidCredentials(true);\r\n    }\r\n  };\r\n\r\n  const createUserAndContinue = (email) => {\r\n    const userApiService = new UserApiService();\r\n    userApiService.createUser(\r\n      email,\r\n      (response) => {\r\n        const user = {\r\n          id: response.data.id,\r\n          email: response.data.attributes.email,\r\n          userType: response.data.attributes.userType,\r\n        };\r\n        dispatch(setUser(user));\r\n        sessionStorage.setItem(\"asante:user\", JSON.stringify(user));\r\n        navigate(`/register/causes`);\r\n      },\r\n      (error) => {\r\n        clearStore(true);\r\n        setInvalidCredentials(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Box className={styles.box}>\r\n        <div className={styles.imageContainer}></div>\r\n        <div className={styles.textSecondary}>\r\n          Log in to <span className={styles.highlight}>ASANTe</span> portal\r\n        </div>\r\n        <Box\r\n          component=\"form\"\r\n          onSubmit={handleSubmit}\r\n          className={styles.formContainer}\r\n        >\r\n          <div className={styles.inputWrapper}>\r\n            <label htmlFor=\"email\" className={styles.inputLabel}>\r\n              Email\r\n              {invalidCredentials && <span className={styles.errorText}> Invalid Credentials</span>}\r\n              {emailEmpty && <span className={styles.errorText}> Email required</span>}\r\n            </label>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"email\"\r\n              placeholder=\"Enter email address here\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e) => {\r\n                setInvalidCredentials(false);\r\n                setEmailEmpty(false);\r\n                setEmail(e.target.value);\r\n              }}\r\n              className={styles.inputField}\r\n              InputProps={{\r\n                classes: { root: styles.inputRoot, input: styles.input },\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.inputWrapper}>\r\n            <label htmlFor=\"password\" className={styles.inputLabel}>\r\n              Password\r\n              {passwordEmpty && <span className={styles.errorText}> Password required</span>}\r\n            </label>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"password\"\r\n              placeholder=\"Enter a strong password here\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setInvalidCredentials(false);\r\n                setPasswordEmpty(false);\r\n                setPassword(e.target.value);\r\n              }}\r\n              className={styles.inputField}\r\n              InputProps={{\r\n                classes: { root: styles.inputRoot, input: styles.input },\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                      tabIndex={-1}\r\n                    >\r\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className={styles.loginButton}>\r\n            Log in\r\n          </button>\r\n          <p className={styles.signupText}>\r\n            Don't have an account?{\" \"}\r\n            <Link href={`/register`} className={styles.signupLink}>\r\n              Create Account\r\n            </Link>\r\n          </p>\r\n          <Link href=\"#\" className={styles.forgotPasswordLink}>\r\n            Forgot Password?\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}